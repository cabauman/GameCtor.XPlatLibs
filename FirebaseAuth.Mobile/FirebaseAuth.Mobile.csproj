<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <!--Work around so the conditions work below-->
    <TargetFrameworks></TargetFrameworks>
    <TargetFrameworks Condition=" '$(OS)' == 'Windows_NT' ">netstandard2.0;Xamarin.iOS10;MonoAndroid80</TargetFrameworks>
    <TargetFrameworks Condition=" '$(OS)' != 'Windows_NT' ">netstandard2.0;Xamarin.iOS10;MonoAndroid80</TargetFrameworks>

    <RootNamespace>GameCtor.FirebaseAuth.Mobile</RootNamespace>
    <AssemblyName>GameCtor.FirebaseAuth.Mobile</AssemblyName>
    <PackageId>GameCtor.FirebaseAuth.Mobile</PackageId>

    <Product>$(AssemblyName) ($(TargetFramework))</Product>
    <AssemblyVersion>1.0.3.0</AssemblyVersion>
    <AssemblyFileVersion>1.0.3.0</AssemblyFileVersion>
    <Version>1.0.3.0</Version>
    <PackageVersion>1.0.3.0</PackageVersion>
    <PackOnBuild>true</PackOnBuild>
    <NeutralLanguage>en</NeutralLanguage>
    <DefineConstants>$(DefineConstants);</DefineConstants>

    <UseFullSemVerForNuGet>false</UseFullSemVerForNuGet>
    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>

    <PackageProjectUrl>https://github.com/cabauman/GameCtor.XPlatLibs</PackageProjectUrl>
    <RepositoryUrl>https://github.com/cabauman/GameCtor.XPlatLibs</RepositoryUrl>
    <PackageReleaseNotes>Initial release</PackageReleaseNotes>
    <PackageTags>xamarin, ios, android, xamarin.forms, plugin, firebase, authentication</PackageTags>

    <Title>Firebase Auth Plugin for Xamarin iOS and Android</Title>
    <Summary>Firebase Auth Plugin for Xamarin iOS and Android</Summary>
    <Description>A wrapper that allows you to use the iOS/Android Firebase Auth bindings (by Xamarin) from your netstandard library.</Description>

    <Owners>Colt Alan Bauman</Owners>
    <Authors>Colt Alan Bauman</Authors>
    <Copyright>Copyright 2018</Copyright>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)'=='Debug' ">
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)'=='Release' ">
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <DebugType>pdbonly</DebugType>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="**\*.shared.cs" />
    <ProjectReference Include="..\FirebaseAuth\FirebaseAuth.csproj" />
    <PackageReference Include="Microsoft.CodeAnalysis.FxCopAnalyzers" Version="2.6.3">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="MSBuild.Sdk.Extras" Version="1.6.68" PrivateAssets="All" />
    <PackageReference Include="Nerdbank.GitVersioning" Version="2.3.105">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Roslynator.Analyzers" Version="2.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="StyleCop.Analyzers" Version="1.0.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="System.Reactive" Version="4.1.3" />
  </ItemGroup>

  <ItemGroup Condition=" $(TargetFramework.StartsWith('netstandard')) ">
  </ItemGroup>

  <ItemGroup Condition=" $(TargetFramework.StartsWith('MonoAndroid')) ">
    <Compile Include="**\*.android.cs" />
    <PackageReference Include="Plugin.CurrentActivity" Version="2.1.0.4" />
    <PackageReference Include="Xamarin.Firebase.Auth" Version="60.1142.1" />
  </ItemGroup>

  <ItemGroup Condition=" $(TargetFramework.StartsWith('Xamarin.iOS')) ">
    <Compile Include="**\*.apple.cs" />
    <PackageReference Include="Xamarin.Firebase.iOS.Auth" Version="5.0.4.1" />
  </ItemGroup>

  <Import Project="$(MSBuildSDKExtrasTargets)" Condition="Exists('$(MSBuildSDKExtrasTargets)')" />
</Project>
